/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 test2.glb
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshStandardMaterial } from 'three'
import { useFrame } from '@react-three/fiber'

export function ConvertedGltf(props) {
  const { nodes, materials } = useGLTF('/models/test2.glb')
  const [hovered, hover] = useState(false)
  const [clicked, click] = useState(false)
  const ref = useRef()
  const defaultMaterial = new MeshStandardMaterial()

  useFrame((state, delta) => (ref.current.rotation.x += delta))

  return (
    <group {...props} dispose={null}>
      {/* <mesh geometry={nodes.Icosphere.geometry} material={nodes.Icosphere.material} scale={1.435} /> */}
      <mesh
        ref={ref}
        geometry={nodes.Icosphere.geometry}
        // material={defaultMaterial}
        scale={1.435}
        // onPointerOver={(event) => {
        //   console.log('over')
        //   ref.current.material = props.material
        //   // console.log(ref)
        // }}
        // onPointerOut={(event) => {
        //   console.log('not over')
        //   ref.current.material = defaultMaterial
        // }}
      >
        <meshPhysicalMaterial clearcoat={1} clearcoatRoughness={0} roughness={0} metalness={1} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/test2.glb')
